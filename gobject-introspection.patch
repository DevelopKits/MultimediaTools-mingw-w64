--- tests/offsets/Makefile.am.orig	2017-09-18 16:24:06.443139200 +0100
+++ tests/offsets/Makefile.am	2017-09-18 16:24:26.920857900 +0100
@@ -18,7 +18,7 @@
 	offsets.c
 liboffsets_la_CPPFLAGS = $(GIREPO_CFLAGS) $(GI_HIDDEN_VISIBILITY_CFLAGS) -I$(top_srcdir)/tests
 # dummy rpath to get built dynamically (huh?)
-liboffsets_la_LDFLAGS = -avoid-version -rpath $(libdir)
+liboffsets_la_LDFLAGS = -avoid-version -no-undefined -rpath $(libdir)
 
 Offsets-1.0.gir: liboffsets.la offsets.h
 Offsets_1_0_gir_INCLUDES = GObject-2.0
--- m4/introspection.m4.orig	2014-02-21 11:12:52.824027600 +0000
+++ m4/introspection.m4	2014-03-18 11:50:45.281823900 +0000
@@ -56,14 +56,14 @@
     INTROSPECTION_GIRDIR=
     INTROSPECTION_TYPELIBDIR=
     if test "x$found_introspection" = "xyes"; then
-       INTROSPECTION_SCANNER=`$PKG_CONFIG --variable=g_ir_scanner gobject-introspection-1.0`
-       INTROSPECTION_COMPILER=`$PKG_CONFIG --variable=g_ir_compiler gobject-introspection-1.0`
-       INTROSPECTION_GENERATE=`$PKG_CONFIG --variable=g_ir_generate gobject-introspection-1.0`
-       INTROSPECTION_GIRDIR=`$PKG_CONFIG --variable=girdir gobject-introspection-1.0`
-       INTROSPECTION_TYPELIBDIR="$($PKG_CONFIG --variable=typelibdir gobject-introspection-1.0)"
-       INTROSPECTION_CFLAGS=`$PKG_CONFIG --cflags gobject-introspection-1.0`
-       INTROSPECTION_LIBS=`$PKG_CONFIG --libs gobject-introspection-1.0`
-       INTROSPECTION_MAKEFILE=`$PKG_CONFIG --variable=datadir gobject-introspection-1.0`/gobject-introspection-1.0/Makefile.introspection
+       INTROSPECTION_SCANNER=`$PKG_CONFIG --dont-define-prefix --variable=g_ir_scanner gobject-introspection-1.0`
+       INTROSPECTION_COMPILER=`$PKG_CONFIG --dont-define-prefix --variable=g_ir_compiler gobject-introspection-1.0`
+       INTROSPECTION_GENERATE=`$PKG_CONFIG --dont-define-prefix --variable=g_ir_generate gobject-introspection-1.0`
+       INTROSPECTION_GIRDIR=`$PKG_CONFIG --dont-define-prefix --variable=girdir gobject-introspection-1.0`
+       INTROSPECTION_TYPELIBDIR="$($PKG_CONFIG --dont-define-prefix --variable=typelibdir gobject-introspection-1.0)"
+       INTROSPECTION_CFLAGS=`$PKG_CONFIG --dont-define-prefix --cflags gobject-introspection-1.0`
+       INTROSPECTION_LIBS=`$PKG_CONFIG --dont-define-prefix --libs gobject-introspection-1.0`
+       INTROSPECTION_MAKEFILE=`$PKG_CONFIG --dont-define-prefix --variable=datadir gobject-introspection-1.0`/gobject-introspection-1.0/Makefile.introspection
     fi
     AC_SUBST(INTROSPECTION_SCANNER)
     AC_SUBST(INTROSPECTION_COMPILER)
--- giscanner/dumper.py.orig	2016-07-29 06:32:43.000000000 +0100
+++ giscanner/dumper.py	2016-10-30 22:48:11.873424500 +0000
@@ -168,5 +168,5 @@
         except CompilerError as e:
             if not utils.have_debug_flag('save-temps'):
-                shutil.rmtree(tmpdir)
+                shutil.rmtree(tmpdir, True)
             raise SystemExit('compilation of temporary binary failed:' + str(e))
 
@@ -175,5 +175,5 @@
         except LinkerError as e:
             if not utils.have_debug_flag('save-temps'):
-                shutil.rmtree(tmpdir)
+                shutil.rmtree(tmpdir, True)
             raise SystemExit('linking of temporary binary failed: ' + str(e))
 
diff -rU2 gobject-introspection-1.50.0.orig/giscanner/gdumpparser.py gobject-introspection-1.50.0/giscanner/gdumpparser.py
--- giscanner/gdumpparser.py.orig	2016-07-29 06:32:43.000000000 +0100
+++ giscanner/gdumpparser.py	2016-10-30 22:45:58.043346300 +0000
@@ -182,5 +182,5 @@
         finally:
             if not utils.have_debug_flag('save-temps'):
-                shutil.rmtree(self._binary.tmpdir)
+                shutil.rmtree(self._binary.tmpdir, True)
 
     # Parser
--- giscanner/gdumpparser.py.prog	2016-10-30 23:06:04.593000000 +0000
+++ giscanner/gdumpparser.py	2016-10-30 23:56:17.679914000 +0000
@@ -29,4 +29,5 @@
 import shutil
 import subprocess
+import time
 from xml.etree.cElementTree import parse
 
@@ -151,4 +152,7 @@
 blob containing data gleaned from GObject's primitive introspection."""
         in_path = os.path.join(self._binary.tmpdir, 'functions.txt')
+
+        assert os.path.isdir(self._binary.tmpdir), "tmpdir missing!"
+
         with open(in_path, 'w') as f:
             for func in self._get_type_functions:
@@ -160,4 +164,12 @@
                 f.write(func)
                 f.write('\n')
+
+        for i in range(10):
+            if os.path.exists(in_path):
+                break
+            message.warn("functions.txt missing, waiting 2s (%s/10)" % (i+1,))
+            time.sleep(2)
+        assert os.path.exists(in_path), "functions.txt still missing!"
+
         out_path = os.path.join(self._binary.tmpdir, 'dump.xml')
 
@@ -179,4 +191,12 @@
                 # Clean up temporaries
                 raise SystemExit(e)
+
+            for i in range(10):
+                if os.path.exists(out_path):
+                    break
+                message.warn("dump.xml missing, waiting 2s (%s/10)" % (i+1,))
+                time.sleep(2)
+            assert os.path.exists(out_path), "dump.xml still missing"
+
             return parse(out_path)
         finally:
--- giscanner/gdumpparser.py.orig	2016-10-31 00:07:38.852765600 +0000
+++ giscanner/gdumpparser.py	2016-10-31 00:30:29.243390600 +0000
@@ -199,5 +199,15 @@
             assert os.path.exists(out_path), "dump.xml still missing"
 
-            return parse(out_path)
+            # Just in case the XML data is not fully written at this point...
+            for i in range(10):
+                try:
+                    return parse(out_path)
+                except Exception as e:
+                    message.warn("XML parse failed (%d/10): %s" % (i+1, e))
+                    if i >= 10:
+                        raise
+                time.sleep(2)
+            raise RuntimeError("this exception should never happen")
+
         finally:
             if not utils.have_debug_flag('save-temps'):
--- m4/python.m4.orig	2014-02-17 13:49:28.485000000 +0400
+++ m4/python.m4	2014-02-17 13:49:34.101000000 +0400
@@ -64,7 +64,7 @@
 AC_MSG_CHECKING(for libraries required to link against libpython)
 dnl deduce PYTHON_LIBS
 if test "x$PYTHON_LIBS" = x; then
-	PYTHON_LIBS=`$PYTHON-config --ldflags --libs`
+	PYTHON_LIBS=`$PYTHON-config --ldflags`
 fi
 AC_SUBST(PYTHON_LIBS)
 dnl check if libpython exist:

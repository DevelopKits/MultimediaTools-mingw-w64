--- libopendcp/opendcp_image.c.orig	2017-01-02 21:41:24.859675900 +0000
+++ libopendcp/opendcp_image.c	2017-01-02 21:42:09.486481800 +0000
@@ -254,13 +254,13 @@
         int pixel1_r = (int)4095*image->component[2].float_data[i+1];
         /* put pixel data in dbuffer */
         dbuffer[d + 0] = pixel0_b >> 4;
-        dbuffer[d + 1] = (pixel0_b & 0x0f) << 4 ) | ((pixel0_g >> 8) & 0x0f);
+        dbuffer[d + 1] = ((pixel0_b & 0x0f) << 4 ) | ((pixel0_g >> 8) & 0x0f);
         dbuffer[d + 2] = pixel0_g;
         dbuffer[d + 3] = pixel0_r >> 4;
-        dbuffer[d + 4] = (pixel0_r & 0x0f) << 4 ) | ((pixel1_b >> 8) & 0x0f);
+        dbuffer[d + 4] = ((pixel0_r & 0x0f) << 4 ) | ((pixel1_b >> 8) & 0x0f);
         dbuffer[d + 5] = pixel1_b;
         dbuffer[d + 6] = (pixel1_g >> 4);
-        dbuffer[d + 7] = (pixel1_g << 4 ) | (pixel1_r >> 8) & 0x0f);
+        dbuffer[d + 7] = (pixel1_g << 4 ) | ((pixel1_r >> 8) & 0x0f);
         dbuffer[d + 8] = pixel1_r;
         d += 9;
     }
@@ -384,7 +384,7 @@
 }
 
 /* dci transfer (floatt data) */
-float dci_transfer(float p) {
+float dci_transfer_float(float p) {
     float v;
 
     v = pow((p * DCI_COEFFICENT), DCI_DEGAMMA);
@@ -402,7 +402,7 @@
 }
 
 /* dci transfer inverse (float data) */
-float dci_transfer_inverse(float p) {
+float dci_transfer_inverse_float(float p) {
 
     return (pow(p, 1 / DCI_GAMMA));
 }

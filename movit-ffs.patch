--- fft_convolution_effect.cpp.orig	2017-01-21 17:47:38.679952900 +0000
+++ fft_convolution_effect.cpp	2017-01-21 17:49:14.958116000 +0000
@@ -60,7 +60,7 @@
 	}
 
 	// FFT.
-	int num_passes = ffs(fft_size) - 1;
+	int num_passes = __builtin_ffs(fft_size) - 1;
 	for (int i = 1; i <= num_passes; ++i) {
 		Effect *fft_effect = chain->add_effect(new FFTPassEffect(), last_effect);
 		CHECK(fft_effect->set_int("pass_number", i));
@@ -78,7 +78,7 @@
 Effect *add_ifft_and_discard(EffectChain *chain, Effect *last_effect, int fft_size, int pad_size, FFTPassEffect::Direction direction)
 {
 	// IFFT.
-	int num_passes = ffs(fft_size) - 1;
+	int num_passes = __builtin_ffs(fft_size) - 1;
 	for (int i = 1; i <= num_passes; ++i) {
 		Effect *fft_effect = chain->add_effect(new FFTPassEffect(), last_effect);
 		CHECK(fft_effect->set_int("pass_number", i));
@@ -158,26 +158,26 @@
 
 						// log(X) FFT passes. Each pass reads two inputs per pixel,
 						// plus the support texture.
-						cost += (ffs(x) - 1) * 3 * output_width * input_height;
+						cost += (__builtin_ffs(x) - 1) * 3 * output_width * input_height;
 
 						// Now, horizontal padding.
 						cost += output_width * output_height;
 
 						// log(Y) FFT passes, now at full resolution.
-						cost += (ffs(y) - 1) * 3 * output_width * output_height;
+						cost += (__builtin_ffs(y) - 1) * 3 * output_width * output_height;
 					} else {
 						// First, the cost of the vertical padding.
 						cost = input_width * output_height;
 
 						// log(Y) FFT passes. Each pass reads two inputs per pixel,
 						// plus the support texture.
-						cost += (ffs(y) - 1) * 3 * input_width * output_height;
+						cost += (__builtin_ffs(y) - 1) * 3 * input_width * output_height;
 
 						// Now, horizontal padding.
 						cost += output_width * output_height;
 
 						// log(X) FFT passes, now at full resolution.
-						cost += (ffs(x) - 1) * 3 * output_width * output_height;
+						cost += (__builtin_ffs(x) - 1) * 3 * output_width * output_height;
 					}
 
 					// The actual modulation. Reads one pixel each from two textures.
@@ -185,25 +185,25 @@
 
 					if (x_before_y_ifft) {
 						// log(X) IFFT passes.
-						cost += (ffs(x) - 1) * 3 * output_width * output_height;
+						cost += (__builtin_ffs(x) - 1) * 3 * output_width * output_height;
 
 						// Discard horizontally.
 						cost += input_width * output_height;
 
 						// log(Y) IFFT passes.
-						cost += (ffs(y) - 1) * 3 * input_width * output_height;
+						cost += (__builtin_ffs(y) - 1) * 3 * input_width * output_height;
 
 						// Discard horizontally.
 						cost += input_width * input_height;
 					} else {
 						// log(Y) IFFT passes.
-						cost += (ffs(y) - 1) * 3 * output_width * output_height;
+						cost += (__builtin_ffs(y) - 1) * 3 * output_width * output_height;
 
 						// Discard vertically.
 						cost += output_width * input_height;
 
 						// log(X) IFFT passes.
-						cost += (ffs(x) - 1) * 3 * output_width * input_height;
+						cost += (__builtin_ffs(x) - 1) * 3 * output_width * input_height;
 
 						// Discard horizontally.
 						cost += input_width * input_height;
--- Makefile.in.orig	2017-01-22 14:38:58.699038500 +0000
+++ Makefile.in	2017-01-22 14:42:17.319541100 +0000
@@ -121,7 +121,7 @@
 
 # The library itself.
 libmovit.la: $(LIB_OBJS:.o=.lo)
-	$(LIBTOOL) --mode=link $(CXX) $(LDFLAGS) -rpath $(libdir) -version-info $(movit_ltversion) -o $@ $^ $(LDLIBS)
+	$(LIBTOOL) --mode=link $(CXX) $(LDFLAGS) -rpath $(libdir) -version-info $(movit_ltversion) -no-undefined -o $@ $^ $(LDLIBS)
 
 %.lo: %.cpp
 	$(LIBTOOL) --mode=compile $(CXX) -MMD -MP $(CPPFLAGS) $(CXXFLAGS) -o $@ -c $<
--- demo.cpp.orig	2017-01-22 16:15:57.750629900 +0000
+++ demo.cpp	2017-01-22 16:16:12.204834900 +0000
@@ -25,7 +25,7 @@
 #endif
 
 #include <assert.h>
-#include <features.h>
+//#include <features.h>
 #include <math.h>
 #include <png.h>
 #include <pngconf.h>
--- Makefile.in.orig	2017-01-22 16:31:59.257059700 +0000
+++ Makefile.in	2017-01-22 16:32:13.910200100 +0000
@@ -29,7 +29,7 @@
 LDFLAGS=@LDFLAGS@
 LDLIBS=@epoxy_LIBS@ @FFTW3_LIBS@ -lpthread
 TEST_LDLIBS=@epoxy_LIBS@ @SDL2_LIBS@ @benchmark_LIBS@ -lpthread
-DEMO_LDLIBS=@SDL2_image_LIBS@ -lrt -lpthread @libpng_LIBS@ @FFTW3_LIBS@
+DEMO_LDLIBS=@SDL2_image_LIBS@ -lpthread @libpng_LIBS@ @FFTW3_LIBS@
 SHELL=@SHELL@
 LIBTOOL=@LIBTOOL@ --tag=CXX
 RANLIB=ranlib
